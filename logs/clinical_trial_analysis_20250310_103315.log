2025-03-10 10:33:15 - root - INFO - Logging to file: logs\clinical_trial_analysis_20250310_103315.log
2025-03-10 10:33:15 - __main__ - INFO - Application started...
2025-03-10 10:33:39 - src.utils.helpers - INFO - Sending GET request to URL: https://clinicaltrials.gov/api/v2/studies?query.cond=cancer&query.term=cancer&query.titles=Cancer&fields=NCTId&pageSize=1
2025-03-10 10:33:39 - src.utils.helpers - INFO - Request successful.
2025-03-10 10:33:43 - __main__ - INFO - Processing trial 1: NCT ID NCT00003082
2025-03-10 10:33:43 - src.services.trial_manager - INFO - Starting processing for trial NCT ID: NCT00003082
2025-03-10 10:33:43 - src.services.trial_manager - INFO - Fetching trial data for NCT ID: NCT00003082
2025-03-10 10:33:43 - src.utils.helpers - INFO - Sending GET request to URL: https://clinicaltrials.gov/api/v2/studies/NCT00003082?fields=NCTId,OfficialTitle,EligibilityModule
2025-03-10 10:33:43 - src.utils.helpers - INFO - Request successful.
2025-03-10 10:33:43 - src.services.trial_manager - INFO - Successfully retrieved trial data.
2025-03-10 10:33:43 - src.services.identifier - INFO - Starting identification of criteria for trial NCT ID: NCT00003082
2025-03-10 10:33:46 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:33:46 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:33:48 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:33:48 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:33:51 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:33:51 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:34:11 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:34:11 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:34:26 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:34:26 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:34:26 - src.services.identifier - INFO - Successfully identified criteria for trial NCT ID: NCT00003082
2025-03-10 10:34:27 - src.repositories.trial_repository - INFO - Model saved successfully at C:\Users\wasab\Documents\code\python\Clinical-Trial-Prompts\output\allTrials\identified\NCT00003082_identified.json
2025-03-10 10:34:27 - src.services.logical_structurizer - INFO - Starting logical structurizing for trial NCT ID: NCT00003082
2025-03-10 10:34:28 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:34:28 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='Healthy volunteers allowed', criterions=[SingleRequirementCriterion(exact_snippets='Healthy volunteers allowed', criterion='volunteer health status', requirement=Requirement(requirement_type='status', expected_value='healthy'))]) logical_structure=LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Healthy volunteers allowed', criterion='volunteer health status', requirement=Requirement(requirement_type='status', expected_value='healthy'))])
2025-03-10 10:34:28 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='Healthy volunteers allowed', criterion='volunteer health status', requirement=Requirement(requirement_type='status', expected_value='healthy'))]
2025-03-10 10:34:28 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='Healthy volunteers allowed', criterion='volunteer health status', requirement=Requirement(requirement_type='status', expected_value='healthy'))]
2025-03-10 10:34:28 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:34:28 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:34:30 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:34:30 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='Must have minimum age of 18 Years', criterions=[SingleRequirementCriterion(exact_snippets='minimum age of 18 Years', criterion='age', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=18, unit='Years')))]) logical_structure=LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='minimum age of 18 Years', criterion='age', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=18, unit='Years')))])
2025-03-10 10:34:30 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='minimum age of 18 Years', criterion='age', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=18, unit='Years')))]
2025-03-10 10:34:30 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='minimum age of 18 Years', criterion='age', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=18, unit='Years')))]
2025-03-10 10:34:30 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:34:30 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:34:36 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:34:36 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='DISEASE CHARACTERISTICS: Refractory or recurrent advanced malignancy following known standard effective therapy or advanced malignancy for which no standard effective therapy exists Measurable or evaluable disease', criterions=[SingleRequirementCriterion(exact_snippets='Refractory or recurrent advanced malignancy following known standard effective therapy', criterion='refractory or recurrent advanced malignancy', requirement=Requirement(requirement_type='treatment history', expected_value='following known standard effective therapy')), SingleRequirementCriterion(exact_snippets='advanced malignancy for which no standard effective therapy exists', criterion='advanced malignancy', requirement=Requirement(requirement_type='treatment availability', expected_value='no standard effective therapy exists')), SingleRequirementCriterion(exact_snippets='Measurable or evaluable disease', criterion='disease measurability', requirement=Requirement(requirement_type='measurability', expected_value=['measurable', 'evaluable']))]) logical_structure=LLMLogicalOr(or_criteria=[LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Refractory or recurrent advanced malignancy following known standard effective therapy', criterion='refractory or recurrent advanced malignancy', requirement=Requirement(requirement_type='treatment history', expected_value='following known standard effective therapy')), SingleRequirementCriterion(exact_snippets='Measurable or evaluable disease', criterion='disease measurability', requirement=Requirement(requirement_type='measurability', expected_value=['measurable', 'evaluable']))]), LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='advanced malignancy for which no standard effective therapy exists', criterion='advanced malignancy', requirement=Requirement(requirement_type='treatment availability', expected_value='no standard effective therapy exists')), SingleRequirementCriterion(exact_snippets='Measurable or evaluable disease', criterion='disease measurability', requirement=Requirement(requirement_type='measurability', expected_value=['measurable', 'evaluable']))])])
2025-03-10 10:34:36 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='Refractory or recurrent advanced malignancy following known standard effective therapy', criterion='refractory or recurrent advanced malignancy', requirement=Requirement(requirement_type='treatment history', expected_value='following known standard effective therapy')), SingleRequirementCriterion(exact_snippets='advanced malignancy for which no standard effective therapy exists', criterion='advanced malignancy', requirement=Requirement(requirement_type='treatment availability', expected_value='no standard effective therapy exists')), SingleRequirementCriterion(exact_snippets='Measurable or evaluable disease', criterion='disease measurability', requirement=Requirement(requirement_type='measurability', expected_value=['measurable', 'evaluable']))]
2025-03-10 10:34:36 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='Refractory or recurrent advanced malignancy following known standard effective therapy', criterion='refractory or recurrent advanced malignancy', requirement=Requirement(requirement_type='treatment history', expected_value='following known standard effective therapy')), SingleRequirementCriterion(exact_snippets='Measurable or evaluable disease', criterion='disease measurability', requirement=Requirement(requirement_type='measurability', expected_value=['measurable', 'evaluable'])), SingleRequirementCriterion(exact_snippets='advanced malignancy for which no standard effective therapy exists', criterion='advanced malignancy', requirement=Requirement(requirement_type='treatment availability', expected_value='no standard effective therapy exists')), SingleRequirementCriterion(exact_snippets='Measurable or evaluable disease', criterion='disease measurability', requirement=Requirement(requirement_type='measurability', expected_value=['measurable', 'evaluable']))]
2025-03-10 10:34:36 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:34:36 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:35:00 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:00 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='PATIENT CHARACTERISTICS: Age: 18 and over Performance status: SWOG 0-2 Life expectancy: At least 2 months Hematopoietic: Absolute neutrophil count at least 1800/mm3 Hematocrit at least 30 mg/dL Platelet count at least 50,000/mm3 Hepatic: Bilirubin no greater than 1.5 times normal unless due to disease, then less than 3.5 times normal Transaminases less than 3 times upper limit of normal (ULN) (less than 5 times ULN if due to liver metastases) Renal: Creatinine no greater than 2.5 times normal Cardiovascular: No severe cardiac abnormalities Must have adequate venous access No history of sustained ventricular arrhythmia or unexplained syncope Pulmonary: No severe pulmonary abnormalities Other: Not pregnant or nursing Effective contraception required of fertile female patients No serious concurrent medical or psychiatric illness Adequate nutrition No human antimouse antibodies', criterions=[SingleRequirementCriterion(exact_snippets='Age: 18 and over', criterion='age', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=18, unit='years'))), SingleRequirementCriterion(exact_snippets='Performance status: SWOG 0-2', criterion='performance status', requirement=Requirement(requirement_type='scale', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN_OR_EQUAL_TO: '<='>, value=2, unit='SWOG'))), SingleRequirementCriterion(exact_snippets='Life expectancy: At least 2 months', criterion='life expectancy', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=2, unit='months'))), SingleRequirementCriterion(exact_snippets='Hematopoietic: Absolute neutrophil count at least 1800/mm3', criterion='absolute neutrophil count', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=1800, unit='mm3'))), SingleRequirementCriterion(exact_snippets='Hematocrit at least 30 mg/dL', criterion='hematocrit', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=30, unit='mg/dL'))), SingleRequirementCriterion(exact_snippets='Platelet count at least 50,000/mm3', criterion='platelet count', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=50000, unit='mm3'))), SingleRequirementCriterion(exact_snippets='Hepatic: Bilirubin no greater than 1.5 times normal unless due to disease, then less than 3.5 times normal', criterion='bilirubin', requirement=Requirement(requirement_type='maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN_OR_EQUAL_TO: '<='>, value=1.5, unit='times normal'))), SingleRequirementCriterion(exact_snippets='Hepatic: Bilirubin no greater than 1.5 times normal unless due to disease, then less than 3.5 times normal', criterion='bilirubin', requirement=Requirement(requirement_type='conditional maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=3.5, unit='times normal'))), SingleRequirementCriterion(exact_snippets='Transaminases less than 3 times upper limit of normal (ULN) (less than 5 times ULN if due to liver metastases)', criterion='transaminases', requirement=Requirement(requirement_type='maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=3, unit='times ULN'))), SingleRequirementCriterion(exact_snippets='Transaminases less than 3 times upper limit of normal (ULN) (less than 5 times ULN if due to liver metastases)', criterion='transaminases', requirement=Requirement(requirement_type='conditional maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=5, unit='times ULN'))), SingleRequirementCriterion(exact_snippets='Renal: Creatinine no greater than 2.5 times normal', criterion='creatinine', requirement=Requirement(requirement_type='maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN_OR_EQUAL_TO: '<='>, value=2.5, unit='times normal'))), SingleRequirementCriterion(exact_snippets='Cardiovascular: No severe cardiac abnormalities', criterion='severe cardiac abnormalities', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Must have adequate venous access', criterion='venous access', requirement=Requirement(requirement_type='adequacy', expected_value=True)), SingleRequirementCriterion(exact_snippets='No history of sustained ventricular arrhythmia or unexplained syncope', criterion='history of sustained ventricular arrhythmia', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='No history of sustained ventricular arrhythmia or unexplained syncope', criterion='history of unexplained syncope', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Pulmonary: No severe pulmonary abnormalities', criterion='severe pulmonary abnormalities', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Not pregnant or nursing', criterion='pregnancy', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Not pregnant or nursing', criterion='nursing', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Effective contraception required of fertile female patients', criterion='effective contraception', requirement=Requirement(requirement_type='requirement', expected_value=True)), SingleRequirementCriterion(exact_snippets='No serious concurrent medical or psychiatric illness', criterion='serious concurrent medical illness', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='No serious concurrent medical or psychiatric illness', criterion='serious concurrent psychiatric illness', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Adequate nutrition', criterion='nutrition', requirement=Requirement(requirement_type='adequacy', expected_value=True)), SingleRequirementCriterion(exact_snippets='No human antimouse antibodies', criterion='human antimouse antibodies', requirement=Requirement(requirement_type='presence', expected_value=False))]) logical_structure=LLMLogicalAnd(and_criteria=[LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Age: 18 and over', criterion='age', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=18, unit='years'))), SingleRequirementCriterion(exact_snippets='Performance status: SWOG 0-2', criterion='performance status', requirement=Requirement(requirement_type='scale', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN_OR_EQUAL_TO: '<='>, value=2, unit='SWOG'))), SingleRequirementCriterion(exact_snippets='Life expectancy: At least 2 months', criterion='life expectancy', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=2, unit='months')))]), LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Hematopoietic: Absolute neutrophil count at least 1800/mm3', criterion='absolute neutrophil count', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=1800, unit='mm3'))), SingleRequirementCriterion(exact_snippets='Hematocrit at least 30 mg/dL', criterion='hematocrit', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=30, unit='mg/dL'))), SingleRequirementCriterion(exact_snippets='Platelet count at least 50,000/mm3', criterion='platelet count', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=50000, unit='mm3')))]), LLMLogicalOr(or_criteria=[LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Hepatic: Bilirubin no greater than 1.5 times normal unless due to disease, then less than 3.5 times normal', criterion='bilirubin', requirement=Requirement(requirement_type='maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN_OR_EQUAL_TO: '<='>, value=1.5, unit='times normal')))]), LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Hepatic: Bilirubin no greater than 1.5 times normal unless due to disease, then less than 3.5 times normal', criterion='bilirubin', requirement=Requirement(requirement_type='conditional maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=3.5, unit='times normal')))])]), LLMLogicalOr(or_criteria=[LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Transaminases less than 3 times upper limit of normal (ULN) (less than 5 times ULN if due to liver metastases)', criterion='transaminases', requirement=Requirement(requirement_type='maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=3, unit='times ULN')))]), LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Transaminases less than 3 times upper limit of normal (ULN) (less than 5 times ULN if due to liver metastases)', criterion='transaminases', requirement=Requirement(requirement_type='conditional maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=5, unit='times ULN')))])]), SingleRequirementCriterion(exact_snippets='Renal: Creatinine no greater than 2.5 times normal', criterion='creatinine', requirement=Requirement(requirement_type='maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN_OR_EQUAL_TO: '<='>, value=2.5, unit='times normal'))), SingleRequirementCriterion(exact_snippets='Cardiovascular: No severe cardiac abnormalities', criterion='severe cardiac abnormalities', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Must have adequate venous access', criterion='venous access', requirement=Requirement(requirement_type='adequacy', expected_value=True)), LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='No history of sustained ventricular arrhythmia or unexplained syncope', criterion='history of sustained ventricular arrhythmia', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='No history of sustained ventricular arrhythmia or unexplained syncope', criterion='history of unexplained syncope', requirement=Requirement(requirement_type='presence', expected_value=False))]), SingleRequirementCriterion(exact_snippets='Pulmonary: No severe pulmonary abnormalities', criterion='severe pulmonary abnormalities', requirement=Requirement(requirement_type='presence', expected_value=False)), LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Not pregnant or nursing', criterion='pregnancy', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Not pregnant or nursing', criterion='nursing', requirement=Requirement(requirement_type='presence', expected_value=False))]), SingleRequirementCriterion(exact_snippets='Effective contraception required of fertile female patients', criterion='effective contraception', requirement=Requirement(requirement_type='requirement', expected_value=True)), LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='No serious concurrent medical or psychiatric illness', criterion='serious concurrent medical illness', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='No serious concurrent medical or psychiatric illness', criterion='serious concurrent psychiatric illness', requirement=Requirement(requirement_type='presence', expected_value=False))]), SingleRequirementCriterion(exact_snippets='Adequate nutrition', criterion='nutrition', requirement=Requirement(requirement_type='adequacy', expected_value=True)), SingleRequirementCriterion(exact_snippets='No human antimouse antibodies', criterion='human antimouse antibodies', requirement=Requirement(requirement_type='presence', expected_value=False))])
2025-03-10 10:35:00 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='Age: 18 and over', criterion='age', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=18, unit='years'))), SingleRequirementCriterion(exact_snippets='Performance status: SWOG 0-2', criterion='performance status', requirement=Requirement(requirement_type='scale', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN_OR_EQUAL_TO: '<='>, value=2, unit='SWOG'))), SingleRequirementCriterion(exact_snippets='Life expectancy: At least 2 months', criterion='life expectancy', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=2, unit='months'))), SingleRequirementCriterion(exact_snippets='Hematopoietic: Absolute neutrophil count at least 1800/mm3', criterion='absolute neutrophil count', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=1800, unit='mm3'))), SingleRequirementCriterion(exact_snippets='Hematocrit at least 30 mg/dL', criterion='hematocrit', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=30, unit='mg/dL'))), SingleRequirementCriterion(exact_snippets='Platelet count at least 50,000/mm3', criterion='platelet count', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=50000, unit='mm3'))), SingleRequirementCriterion(exact_snippets='Hepatic: Bilirubin no greater than 1.5 times normal unless due to disease, then less than 3.5 times normal', criterion='bilirubin', requirement=Requirement(requirement_type='maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN_OR_EQUAL_TO: '<='>, value=1.5, unit='times normal'))), SingleRequirementCriterion(exact_snippets='Hepatic: Bilirubin no greater than 1.5 times normal unless due to disease, then less than 3.5 times normal', criterion='bilirubin', requirement=Requirement(requirement_type='conditional maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=3.5, unit='times normal'))), SingleRequirementCriterion(exact_snippets='Transaminases less than 3 times upper limit of normal (ULN) (less than 5 times ULN if due to liver metastases)', criterion='transaminases', requirement=Requirement(requirement_type='maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=3, unit='times ULN'))), SingleRequirementCriterion(exact_snippets='Transaminases less than 3 times upper limit of normal (ULN) (less than 5 times ULN if due to liver metastases)', criterion='transaminases', requirement=Requirement(requirement_type='conditional maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=5, unit='times ULN'))), SingleRequirementCriterion(exact_snippets='Renal: Creatinine no greater than 2.5 times normal', criterion='creatinine', requirement=Requirement(requirement_type='maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN_OR_EQUAL_TO: '<='>, value=2.5, unit='times normal'))), SingleRequirementCriterion(exact_snippets='Cardiovascular: No severe cardiac abnormalities', criterion='severe cardiac abnormalities', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Must have adequate venous access', criterion='venous access', requirement=Requirement(requirement_type='adequacy', expected_value=True)), SingleRequirementCriterion(exact_snippets='No history of sustained ventricular arrhythmia or unexplained syncope', criterion='history of sustained ventricular arrhythmia', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='No history of sustained ventricular arrhythmia or unexplained syncope', criterion='history of unexplained syncope', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Pulmonary: No severe pulmonary abnormalities', criterion='severe pulmonary abnormalities', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Not pregnant or nursing', criterion='pregnancy', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Not pregnant or nursing', criterion='nursing', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Effective contraception required of fertile female patients', criterion='effective contraception', requirement=Requirement(requirement_type='requirement', expected_value=True)), SingleRequirementCriterion(exact_snippets='No serious concurrent medical or psychiatric illness', criterion='serious concurrent medical illness', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='No serious concurrent medical or psychiatric illness', criterion='serious concurrent psychiatric illness', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Adequate nutrition', criterion='nutrition', requirement=Requirement(requirement_type='adequacy', expected_value=True)), SingleRequirementCriterion(exact_snippets='No human antimouse antibodies', criterion='human antimouse antibodies', requirement=Requirement(requirement_type='presence', expected_value=False))]
2025-03-10 10:35:00 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='Age: 18 and over', criterion='age', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=18, unit='years'))), SingleRequirementCriterion(exact_snippets='Performance status: SWOG 0-2', criterion='performance status', requirement=Requirement(requirement_type='scale', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN_OR_EQUAL_TO: '<='>, value=2, unit='SWOG'))), SingleRequirementCriterion(exact_snippets='Life expectancy: At least 2 months', criterion='life expectancy', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=2, unit='months'))), SingleRequirementCriterion(exact_snippets='Hematopoietic: Absolute neutrophil count at least 1800/mm3', criterion='absolute neutrophil count', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=1800, unit='mm3'))), SingleRequirementCriterion(exact_snippets='Hematocrit at least 30 mg/dL', criterion='hematocrit', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=30, unit='mg/dL'))), SingleRequirementCriterion(exact_snippets='Platelet count at least 50,000/mm3', criterion='platelet count', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=50000, unit='mm3'))), SingleRequirementCriterion(exact_snippets='Hepatic: Bilirubin no greater than 1.5 times normal unless due to disease, then less than 3.5 times normal', criterion='bilirubin', requirement=Requirement(requirement_type='maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN_OR_EQUAL_TO: '<='>, value=1.5, unit='times normal'))), SingleRequirementCriterion(exact_snippets='Hepatic: Bilirubin no greater than 1.5 times normal unless due to disease, then less than 3.5 times normal', criterion='bilirubin', requirement=Requirement(requirement_type='conditional maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=3.5, unit='times normal'))), SingleRequirementCriterion(exact_snippets='Transaminases less than 3 times upper limit of normal (ULN) (less than 5 times ULN if due to liver metastases)', criterion='transaminases', requirement=Requirement(requirement_type='maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=3, unit='times ULN'))), SingleRequirementCriterion(exact_snippets='Transaminases less than 3 times upper limit of normal (ULN) (less than 5 times ULN if due to liver metastases)', criterion='transaminases', requirement=Requirement(requirement_type='conditional maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=5, unit='times ULN'))), SingleRequirementCriterion(exact_snippets='Renal: Creatinine no greater than 2.5 times normal', criterion='creatinine', requirement=Requirement(requirement_type='maximum', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN_OR_EQUAL_TO: '<='>, value=2.5, unit='times normal'))), SingleRequirementCriterion(exact_snippets='Cardiovascular: No severe cardiac abnormalities', criterion='severe cardiac abnormalities', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Must have adequate venous access', criterion='venous access', requirement=Requirement(requirement_type='adequacy', expected_value=True)), SingleRequirementCriterion(exact_snippets='No history of sustained ventricular arrhythmia or unexplained syncope', criterion='history of sustained ventricular arrhythmia', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='No history of sustained ventricular arrhythmia or unexplained syncope', criterion='history of unexplained syncope', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Pulmonary: No severe pulmonary abnormalities', criterion='severe pulmonary abnormalities', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Not pregnant or nursing', criterion='pregnancy', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Not pregnant or nursing', criterion='nursing', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Effective contraception required of fertile female patients', criterion='effective contraception', requirement=Requirement(requirement_type='requirement', expected_value=True)), SingleRequirementCriterion(exact_snippets='No serious concurrent medical or psychiatric illness', criterion='serious concurrent medical illness', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='No serious concurrent medical or psychiatric illness', criterion='serious concurrent psychiatric illness', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Adequate nutrition', criterion='nutrition', requirement=Requirement(requirement_type='adequacy', expected_value=True)), SingleRequirementCriterion(exact_snippets='No human antimouse antibodies', criterion='human antimouse antibodies', requirement=Requirement(requirement_type='presence', expected_value=False))]
2025-03-10 10:35:00 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:35:00 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:35:10 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:10 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='PRIOR CONCURRENT THERAPY: At least 4 weeks since prior anticancer therapy and recovered If there was disease progression during therapy, at least 2 weeks since prior anticancer therapy and recovered Biologic therapy: Not specified Chemotherapy: No concurrent chemotherapy Endocrine therapy: Concurrent topical steroids used in the chronic management of cutaneous T cell lymphoma allowed No other concurrent hormone therapy Radiotherapy: No concurrent palliative radiotherapy Surgery: Not specified', criterions=[SingleRequirementCriterion(exact_snippets='At least 4 weeks since prior anticancer therapy', criterion='time since prior anticancer therapy', requirement=Requirement(requirement_type='time since', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=4, unit='weeks'))), SingleRequirementCriterion(exact_snippets='recovered', criterion='recovery from prior anticancer therapy', requirement=Requirement(requirement_type='recovery status', expected_value=True)), SingleRequirementCriterion(exact_snippets='If there was disease progression during therapy, at least 2 weeks since prior anticancer therapy', criterion='time since prior anticancer therapy with disease progression', requirement=Requirement(requirement_type='time since', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=2, unit='weeks'))), SingleRequirementCriterion(exact_snippets='recovered', criterion='recovery from prior anticancer therapy with disease progression', requirement=Requirement(requirement_type='recovery status', expected_value=True)), SingleRequirementCriterion(exact_snippets='Biologic therapy: Not specified', criterion='biologic therapy', requirement=Requirement(requirement_type='specification', expected_value='Not specified')), SingleRequirementCriterion(exact_snippets='Chemotherapy: No concurrent chemotherapy', criterion='concurrent chemotherapy', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Endocrine therapy: Concurrent topical steroids used in the chronic management of cutaneous T cell lymphoma allowed', criterion='concurrent topical steroids for cutaneous T cell lymphoma', requirement=Requirement(requirement_type='allowance', expected_value=True)), SingleRequirementCriterion(exact_snippets='No other concurrent hormone therapy', criterion='other concurrent hormone therapy', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Radiotherapy: No concurrent palliative radiotherapy', criterion='concurrent palliative radiotherapy', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Surgery: Not specified', criterion='surgery', requirement=Requirement(requirement_type='specification', expected_value='Not specified'))]) logical_structure=LLMLogicalAnd(and_criteria=[LLMLogicalOr(or_criteria=[LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='At least 4 weeks since prior anticancer therapy', criterion='time since prior anticancer therapy', requirement=Requirement(requirement_type='time since', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=4, unit='weeks'))), SingleRequirementCriterion(exact_snippets='recovered', criterion='recovery from prior anticancer therapy', requirement=Requirement(requirement_type='recovery status', expected_value=True))]), LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='If there was disease progression during therapy, at least 2 weeks since prior anticancer therapy', criterion='time since prior anticancer therapy with disease progression', requirement=Requirement(requirement_type='time since', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=2, unit='weeks'))), SingleRequirementCriterion(exact_snippets='recovered', criterion='recovery from prior anticancer therapy with disease progression', requirement=Requirement(requirement_type='recovery status', expected_value=True))])]), SingleRequirementCriterion(exact_snippets='Chemotherapy: No concurrent chemotherapy', criterion='concurrent chemotherapy', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Endocrine therapy: Concurrent topical steroids used in the chronic management of cutaneous T cell lymphoma allowed', criterion='concurrent topical steroids for cutaneous T cell lymphoma', requirement=Requirement(requirement_type='allowance', expected_value=True)), SingleRequirementCriterion(exact_snippets='No other concurrent hormone therapy', criterion='other concurrent hormone therapy', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Radiotherapy: No concurrent palliative radiotherapy', criterion='concurrent palliative radiotherapy', requirement=Requirement(requirement_type='presence', expected_value=False))])
2025-03-10 10:35:10 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='At least 4 weeks since prior anticancer therapy', criterion='time since prior anticancer therapy', requirement=Requirement(requirement_type='time since', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=4, unit='weeks'))), SingleRequirementCriterion(exact_snippets='recovered', criterion='recovery from prior anticancer therapy', requirement=Requirement(requirement_type='recovery status', expected_value=True)), SingleRequirementCriterion(exact_snippets='If there was disease progression during therapy, at least 2 weeks since prior anticancer therapy', criterion='time since prior anticancer therapy with disease progression', requirement=Requirement(requirement_type='time since', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=2, unit='weeks'))), SingleRequirementCriterion(exact_snippets='recovered', criterion='recovery from prior anticancer therapy with disease progression', requirement=Requirement(requirement_type='recovery status', expected_value=True)), SingleRequirementCriterion(exact_snippets='Biologic therapy: Not specified', criterion='biologic therapy', requirement=Requirement(requirement_type='specification', expected_value='Not specified')), SingleRequirementCriterion(exact_snippets='Chemotherapy: No concurrent chemotherapy', criterion='concurrent chemotherapy', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Endocrine therapy: Concurrent topical steroids used in the chronic management of cutaneous T cell lymphoma allowed', criterion='concurrent topical steroids for cutaneous T cell lymphoma', requirement=Requirement(requirement_type='allowance', expected_value=True)), SingleRequirementCriterion(exact_snippets='No other concurrent hormone therapy', criterion='other concurrent hormone therapy', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Radiotherapy: No concurrent palliative radiotherapy', criterion='concurrent palliative radiotherapy', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Surgery: Not specified', criterion='surgery', requirement=Requirement(requirement_type='specification', expected_value='Not specified'))]
2025-03-10 10:35:10 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='At least 4 weeks since prior anticancer therapy', criterion='time since prior anticancer therapy', requirement=Requirement(requirement_type='time since', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=4, unit='weeks'))), SingleRequirementCriterion(exact_snippets='recovered', criterion='recovery from prior anticancer therapy', requirement=Requirement(requirement_type='recovery status', expected_value=True)), SingleRequirementCriterion(exact_snippets='If there was disease progression during therapy, at least 2 weeks since prior anticancer therapy', criterion='time since prior anticancer therapy with disease progression', requirement=Requirement(requirement_type='time since', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=2, unit='weeks'))), SingleRequirementCriterion(exact_snippets='recovered', criterion='recovery from prior anticancer therapy with disease progression', requirement=Requirement(requirement_type='recovery status', expected_value=True)), SingleRequirementCriterion(exact_snippets='Chemotherapy: No concurrent chemotherapy', criterion='concurrent chemotherapy', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Endocrine therapy: Concurrent topical steroids used in the chronic management of cutaneous T cell lymphoma allowed', criterion='concurrent topical steroids for cutaneous T cell lymphoma', requirement=Requirement(requirement_type='allowance', expected_value=True)), SingleRequirementCriterion(exact_snippets='No other concurrent hormone therapy', criterion='other concurrent hormone therapy', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='Radiotherapy: No concurrent palliative radiotherapy', criterion='concurrent palliative radiotherapy', requirement=Requirement(requirement_type='presence', expected_value=False))]
2025-03-10 10:35:10 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:35:10 - src.services.logical_structurizer - ERROR - Missing criteria in logical structure: True
2025-03-10 10:35:10 - src.services.logical_structurizer - ERROR - Validation failed for miscellaneous line: line='PRIOR CONCURRENT THERAPY: At least 4 weeks since prior anticancer therapy and recovered If there was disease progression during therapy, at least 2 weeks since prior anticancer therapy and recovered Biologic therapy: Not specified Chemotherapy: No concurrent chemotherapy Endocrine therapy: Concurrent topical steroids used in the chronic management of cutaneous T cell lymphoma allowed No other concurrent hormone therapy Radiotherapy: No concurrent palliative radiotherapy Surgery: Not specified' criterions=[LLMMultiRequirementCriterion(exact_snippets='At least 4 weeks since prior anticancer therapy', criterion='time since prior anticancer therapy', requirements=[Requirement(requirement_type='time since', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=4, unit='weeks'))]), LLMMultiRequirementCriterion(exact_snippets='recovered', criterion='recovery from prior anticancer therapy', requirements=[Requirement(requirement_type='recovery status', expected_value=True)]), LLMMultiRequirementCriterion(exact_snippets='If there was disease progression during therapy, at least 2 weeks since prior anticancer therapy', criterion='time since prior anticancer therapy with disease progression', requirements=[Requirement(requirement_type='time since', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=2, unit='weeks'))]), LLMMultiRequirementCriterion(exact_snippets='recovered', criterion='recovery from prior anticancer therapy with disease progression', requirements=[Requirement(requirement_type='recovery status', expected_value=True)]), LLMMultiRequirementCriterion(exact_snippets='Biologic therapy: Not specified', criterion='biologic therapy', requirements=[Requirement(requirement_type='specification', expected_value='Not specified')]), LLMMultiRequirementCriterion(exact_snippets='Chemotherapy: No concurrent chemotherapy', criterion='concurrent chemotherapy', requirements=[Requirement(requirement_type='presence', expected_value=False)]), LLMMultiRequirementCriterion(exact_snippets='Endocrine therapy: Concurrent topical steroids used in the chronic management of cutaneous T cell lymphoma allowed', criterion='concurrent topical steroids for cutaneous T cell lymphoma', requirements=[Requirement(requirement_type='allowance', expected_value=True)]), LLMMultiRequirementCriterion(exact_snippets='No other concurrent hormone therapy', criterion='other concurrent hormone therapy', requirements=[Requirement(requirement_type='presence', expected_value=False)]), LLMMultiRequirementCriterion(exact_snippets='Radiotherapy: No concurrent palliative radiotherapy', criterion='concurrent palliative radiotherapy', requirements=[Requirement(requirement_type='presence', expected_value=False)]), LLMMultiRequirementCriterion(exact_snippets='Surgery: Not specified', criterion='surgery', requirements=[Requirement(requirement_type='specification', expected_value='Not specified')])]
2025-03-10 10:35:10 - src.services.logical_structurizer - ERROR - Validation error: Missing criteria in logical structure: True
2025-03-10 10:35:10 - src.services.logical_structurizer - INFO - Completed logical structurizing for trial NCT ID: NCT00003082
2025-03-10 10:35:11 - src.repositories.trial_repository - INFO - Model saved successfully at C:\Users\wasab\Documents\code\python\Clinical-Trial-Prompts\output\allTrials\logical\NCT00003082_logical.json
2025-03-10 10:35:11 - src.services.trial_manager - INFO - Trial processing complete for NCT ID: NCT00003082
2025-03-10 10:35:11 - __main__ - INFO - Successfully processed trial NCT00003082
2025-03-10 10:35:11 - src.utils.helpers - INFO - Sending GET request to URL: https://clinicaltrials.gov/api/v2/studies?query.cond=cancer&query.term=cancer&query.titles=Cancer&fields=NCTId&pageSize=1&pageToken=NF0g5JKP
2025-03-10 10:35:11 - src.utils.helpers - INFO - Request successful.
2025-03-10 10:35:19 - __main__ - INFO - Processing trial 2: NCT ID NCT00301782
2025-03-10 10:35:19 - src.services.trial_manager - INFO - Starting processing for trial NCT ID: NCT00301782
2025-03-10 10:35:19 - src.services.trial_manager - INFO - Fetching trial data for NCT ID: NCT00301782
2025-03-10 10:35:19 - src.utils.helpers - INFO - Sending GET request to URL: https://clinicaltrials.gov/api/v2/studies/NCT00301782?fields=NCTId,OfficialTitle,EligibilityModule
2025-03-10 10:35:19 - src.utils.helpers - INFO - Request successful.
2025-03-10 10:35:19 - src.services.trial_manager - INFO - Successfully retrieved trial data.
2025-03-10 10:35:19 - src.services.identifier - INFO - Starting identification of criteria for trial NCT ID: NCT00301782
2025-03-10 10:35:21 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:21 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:35:23 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:23 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:35:25 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:25 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:35:26 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:26 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:35:29 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:29 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:35:31 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:31 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:35:36 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:36 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:35:38 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:38 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:35:40 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:40 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:35:42 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:42 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:35:43 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:43 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:35:45 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:45 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:35:47 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:47 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:35:48 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:48 - src.services.identifier - WARNING - Failed to extract criteria from line 11.
2025-03-10 10:35:49 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:49 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:35:53 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:53 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:35:54 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:35:54 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:36:00 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:00 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:36:02 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:02 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:36:04 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:04 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:36:06 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:06 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:36:08 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:08 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:36:08 - src.services.identifier - INFO - Successfully identified criteria for trial NCT ID: NCT00301782
2025-03-10 10:36:08 - src.repositories.trial_repository - INFO - Model saved successfully at C:\Users\wasab\Documents\code\python\Clinical-Trial-Prompts\output\allTrials\identified\NCT00301782_identified.json
2025-03-10 10:36:08 - src.services.logical_structurizer - INFO - Starting logical structurizing for trial NCT ID: NCT00301782
2025-03-10 10:36:10 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:10 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='Healthy volunteers allowed', criterions=[SingleRequirementCriterion(exact_snippets='Healthy volunteers allowed', criterion='volunteer health status', requirement=Requirement(requirement_type='status', expected_value='healthy'))]) logical_structure=LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Healthy volunteers allowed', criterion='volunteer health status', requirement=Requirement(requirement_type='status', expected_value='healthy'))])
2025-03-10 10:36:10 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='Healthy volunteers allowed', criterion='volunteer health status', requirement=Requirement(requirement_type='status', expected_value='healthy'))]
2025-03-10 10:36:10 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='Healthy volunteers allowed', criterion='volunteer health status', requirement=Requirement(requirement_type='status', expected_value='healthy'))]
2025-03-10 10:36:10 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:10 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:11 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:11 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='Must be MALE', criterions=[SingleRequirementCriterion(exact_snippets='Must be MALE', criterion='gender', requirement=Requirement(requirement_type='expected_value', expected_value='male'))]) logical_structure=LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Must be MALE', criterion='gender', requirement=Requirement(requirement_type='expected_value', expected_value='male'))])
2025-03-10 10:36:11 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='Must be MALE', criterion='gender', requirement=Requirement(requirement_type='expected_value', expected_value='male'))]
2025-03-10 10:36:11 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='Must be MALE', criterion='gender', requirement=Requirement(requirement_type='expected_value', expected_value='male'))]
2025-03-10 10:36:11 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:11 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:14 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:14 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='Must have minimum age of 16 Years', criterions=[SingleRequirementCriterion(exact_snippets='minimum age of 16 Years', criterion='age', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=16, unit='Years')))]) logical_structure=LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='minimum age of 16 Years', criterion='age', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=16, unit='Years')))])
2025-03-10 10:36:14 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='minimum age of 16 Years', criterion='age', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=16, unit='Years')))]
2025-03-10 10:36:14 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='minimum age of 16 Years', criterion='age', requirement=Requirement(requirement_type='minimum', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=16, unit='Years')))]
2025-03-10 10:36:14 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:14 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:15 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:15 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='DISEASE CHARACTERISTICS:', criterions=[SingleRequirementCriterion(exact_snippets='DISEASE CHARACTERISTICS', criterion='disease characteristics', requirement=Requirement(requirement_type='N/A', expected_value='N/A'))]) logical_structure=LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='DISEASE CHARACTERISTICS', criterion='disease characteristics', requirement=Requirement(requirement_type='N/A', expected_value='N/A'))])
2025-03-10 10:36:15 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='DISEASE CHARACTERISTICS', criterion='disease characteristics', requirement=Requirement(requirement_type='N/A', expected_value='N/A'))]
2025-03-10 10:36:15 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='DISEASE CHARACTERISTICS', criterion='disease characteristics', requirement=Requirement(requirement_type='N/A', expected_value='N/A'))]
2025-03-10 10:36:15 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:15 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:17 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:17 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='* Nonseminoma germ cell tumor of any extracranial primary site diagnosed by 1 of the following methods:', criterions=[SingleRequirementCriterion(exact_snippets='Nonseminoma germ cell tumor of any extracranial primary site', criterion='nonseminoma germ cell tumor', requirement=Requirement(requirement_type='location', expected_value='extracranial'))]) logical_structure=LLMLogicalConditional(condition=SingleRequirementCriterion(exact_snippets='Nonseminoma germ cell tumor of any extracranial primary site', criterion='nonseminoma germ cell tumor', requirement=Requirement(requirement_type='location', expected_value='extracranial')), then_criteria=None, else_criteria=None)
2025-03-10 10:36:17 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='Nonseminoma germ cell tumor of any extracranial primary site', criterion='nonseminoma germ cell tumor', requirement=Requirement(requirement_type='location', expected_value='extracranial'))]
2025-03-10 10:36:17 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='Nonseminoma germ cell tumor of any extracranial primary site', criterion='nonseminoma germ cell tumor', requirement=Requirement(requirement_type='location', expected_value='extracranial'))]
2025-03-10 10:36:17 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:17 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:19 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:19 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='* Histologic confirmation', criterions=[SingleRequirementCriterion(exact_snippets='Histologic confirmation', criterion='histologic confirmation', requirement=Requirement(requirement_type='presence', expected_value=True))]) logical_structure=LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Histologic confirmation', criterion='histologic confirmation', requirement=Requirement(requirement_type='presence', expected_value=True))])
2025-03-10 10:36:19 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='Histologic confirmation', criterion='histologic confirmation', requirement=Requirement(requirement_type='presence', expected_value=True))]
2025-03-10 10:36:19 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='Histologic confirmation', criterion='histologic confirmation', requirement=Requirement(requirement_type='presence', expected_value=True))]
2025-03-10 10:36:19 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:19 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:27 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:27 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='* Alpha-fetoprotein (AFP) > 1,000 ng/mL or human chorionic gonadotropin (hCG) > 5,000 IU/L with appropriate clinical picture in a man < 45 years of age', criterions=[SingleRequirementCriterion(exact_snippets='Alpha-fetoprotein (AFP) > 1,000 ng/mL', criterion='Alpha-fetoprotein (AFP) level', requirement=Requirement(requirement_type='level', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=1000, unit='ng/mL'))), SingleRequirementCriterion(exact_snippets='human chorionic gonadotropin (hCG) > 5,000 IU/L', criterion='human chorionic gonadotropin (hCG) level', requirement=Requirement(requirement_type='level', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=5000, unit='IU/L'))), SingleRequirementCriterion(exact_snippets='appropriate clinical picture', criterion='clinical picture', requirement=Requirement(requirement_type='appropriateness', expected_value=True)), SingleRequirementCriterion(exact_snippets='man < 45 years of age', criterion='age', requirement=Requirement(requirement_type='comparison', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=45, unit='years')))]) logical_structure=LLMLogicalAnd(and_criteria=[LLMLogicalOr(or_criteria=[LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Alpha-fetoprotein (AFP) > 1,000 ng/mL', criterion='Alpha-fetoprotein (AFP) level', requirement=Requirement(requirement_type='level', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=1000, unit='ng/mL'))), SingleRequirementCriterion(exact_snippets='appropriate clinical picture', criterion='clinical picture', requirement=Requirement(requirement_type='appropriateness', expected_value=True)), SingleRequirementCriterion(exact_snippets='man < 45 years of age', criterion='age', requirement=Requirement(requirement_type='comparison', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=45, unit='years')))]), LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='human chorionic gonadotropin (hCG) > 5,000 IU/L', criterion='human chorionic gonadotropin (hCG) level', requirement=Requirement(requirement_type='level', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=5000, unit='IU/L'))), SingleRequirementCriterion(exact_snippets='appropriate clinical picture', criterion='clinical picture', requirement=Requirement(requirement_type='appropriateness', expected_value=True)), SingleRequirementCriterion(exact_snippets='man < 45 years of age', criterion='age', requirement=Requirement(requirement_type='comparison', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=45, unit='years')))])])])
2025-03-10 10:36:27 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='Alpha-fetoprotein (AFP) > 1,000 ng/mL', criterion='Alpha-fetoprotein (AFP) level', requirement=Requirement(requirement_type='level', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=1000, unit='ng/mL'))), SingleRequirementCriterion(exact_snippets='human chorionic gonadotropin (hCG) > 5,000 IU/L', criterion='human chorionic gonadotropin (hCG) level', requirement=Requirement(requirement_type='level', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=5000, unit='IU/L'))), SingleRequirementCriterion(exact_snippets='appropriate clinical picture', criterion='clinical picture', requirement=Requirement(requirement_type='appropriateness', expected_value=True)), SingleRequirementCriterion(exact_snippets='man < 45 years of age', criterion='age', requirement=Requirement(requirement_type='comparison', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=45, unit='years')))]
2025-03-10 10:36:27 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='Alpha-fetoprotein (AFP) > 1,000 ng/mL', criterion='Alpha-fetoprotein (AFP) level', requirement=Requirement(requirement_type='level', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=1000, unit='ng/mL'))), SingleRequirementCriterion(exact_snippets='appropriate clinical picture', criterion='clinical picture', requirement=Requirement(requirement_type='appropriateness', expected_value=True)), SingleRequirementCriterion(exact_snippets='man < 45 years of age', criterion='age', requirement=Requirement(requirement_type='comparison', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=45, unit='years'))), SingleRequirementCriterion(exact_snippets='human chorionic gonadotropin (hCG) > 5,000 IU/L', criterion='human chorionic gonadotropin (hCG) level', requirement=Requirement(requirement_type='level', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=5000, unit='IU/L'))), SingleRequirementCriterion(exact_snippets='appropriate clinical picture', criterion='clinical picture', requirement=Requirement(requirement_type='appropriateness', expected_value=True)), SingleRequirementCriterion(exact_snippets='man < 45 years of age', criterion='age', requirement=Requirement(requirement_type='comparison', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=45, unit='years')))]
2025-03-10 10:36:27 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:27 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:29 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:29 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='Poor prognosis features', criterion='prognosis features', requirement=Requirement(requirement_type='severity', expected_value='poor'))]
2025-03-10 10:36:29 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='Poor prognosis features', criterion='prognosis features', requirement=Requirement(requirement_type='severity', expected_value='poor'))]
2025-03-10 10:36:29 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:29 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:31 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:31 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='* AFP > 10,000 ng/mL', criterions=[SingleRequirementCriterion(exact_snippets='AFP > 10,000 ng/mL', criterion='AFP', requirement=Requirement(requirement_type='level', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=10000, unit='ng/mL')))]) logical_structure=LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='AFP > 10,000 ng/mL', criterion='AFP', requirement=Requirement(requirement_type='level', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=10000, unit='ng/mL')))])
2025-03-10 10:36:31 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='AFP > 10,000 ng/mL', criterion='AFP', requirement=Requirement(requirement_type='level', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=10000, unit='ng/mL')))]
2025-03-10 10:36:31 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='AFP > 10,000 ng/mL', criterion='AFP', requirement=Requirement(requirement_type='level', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=10000, unit='ng/mL')))]
2025-03-10 10:36:31 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:31 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:33 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:33 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='* hCG > 50,000 IU/L', criterions=[SingleRequirementCriterion(exact_snippets='hCG > 50,000 IU/L', criterion='hCG level', requirement=Requirement(requirement_type='quantity', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=50000, unit='IU/L')))]) logical_structure=LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='hCG > 50,000 IU/L', criterion='hCG level', requirement=Requirement(requirement_type='quantity', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=50000, unit='IU/L')))])
2025-03-10 10:36:33 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='hCG > 50,000 IU/L', criterion='hCG level', requirement=Requirement(requirement_type='quantity', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=50000, unit='IU/L')))]
2025-03-10 10:36:33 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='hCG > 50,000 IU/L', criterion='hCG level', requirement=Requirement(requirement_type='quantity', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=50000, unit='IU/L')))]
2025-03-10 10:36:33 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:33 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:35 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:35 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='* Lactic dehydrogenase > 10 times normal', criterions=[SingleRequirementCriterion(exact_snippets='Lactic dehydrogenase > 10 times normal', criterion='lactic dehydrogenase', requirement=Requirement(requirement_type='level', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=10, unit='times normal')))]) logical_structure=LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Lactic dehydrogenase > 10 times normal', criterion='lactic dehydrogenase', requirement=Requirement(requirement_type='level', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=10, unit='times normal')))])
2025-03-10 10:36:35 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='Lactic dehydrogenase > 10 times normal', criterion='lactic dehydrogenase', requirement=Requirement(requirement_type='level', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=10, unit='times normal')))]
2025-03-10 10:36:35 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='Lactic dehydrogenase > 10 times normal', criterion='lactic dehydrogenase', requirement=Requirement(requirement_type='level', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=10, unit='times normal')))]
2025-03-10 10:36:35 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:35 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:37 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:37 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='* Nonpulmonary visceral metastases', criterions=[SingleRequirementCriterion(exact_snippets='Nonpulmonary visceral metastases', criterion='visceral metastases', requirement=Requirement(requirement_type='location', expected_value='nonpulmonary'))]) logical_structure=LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Nonpulmonary visceral metastases', criterion='visceral metastases', requirement=Requirement(requirement_type='location', expected_value='nonpulmonary'))])
2025-03-10 10:36:37 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='Nonpulmonary visceral metastases', criterion='visceral metastases', requirement=Requirement(requirement_type='location', expected_value='nonpulmonary'))]
2025-03-10 10:36:37 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='Nonpulmonary visceral metastases', criterion='visceral metastases', requirement=Requirement(requirement_type='location', expected_value='nonpulmonary'))]
2025-03-10 10:36:37 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:37 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:39 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:39 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='* Mediastinal primary site', criterions=[SingleRequirementCriterion(exact_snippets='Mediastinal primary site', criterion='primary site', requirement=Requirement(requirement_type='location', expected_value='mediastinal'))]) logical_structure=LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Mediastinal primary site', criterion='primary site', requirement=Requirement(requirement_type='location', expected_value='mediastinal'))])
2025-03-10 10:36:39 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='Mediastinal primary site', criterion='primary site', requirement=Requirement(requirement_type='location', expected_value='mediastinal'))]
2025-03-10 10:36:39 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='Mediastinal primary site', criterion='primary site', requirement=Requirement(requirement_type='location', expected_value='mediastinal'))]
2025-03-10 10:36:39 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:39 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:41 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:41 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='* Male', criterions=[SingleRequirementCriterion(exact_snippets='Male', criterion='gender', requirement=Requirement(requirement_type='expected_value', expected_value='male'))]) logical_structure=LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Male', criterion='gender', requirement=Requirement(requirement_type='expected_value', expected_value='male'))])
2025-03-10 10:36:41 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='Male', criterion='gender', requirement=Requirement(requirement_type='expected_value', expected_value='male'))]
2025-03-10 10:36:41 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='Male', criterion='gender', requirement=Requirement(requirement_type='expected_value', expected_value='male'))]
2025-03-10 10:36:41 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:41 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:44 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:44 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='* WHO performance status 0-3', criterions=[SingleRequirementCriterion(exact_snippets='WHO performance status 0-3', criterion='WHO performance status', requirement=Requirement(requirement_type='range', expected_value=LLMRange(comparisons=[LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=0, unit='N/A'), LLMNumericalComparison(operator=<LLMOperator.LESS_THAN_OR_EQUAL_TO: '<='>, value=3, unit='N/A')])))]) logical_structure=LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='WHO performance status 0-3', criterion='WHO performance status', requirement=Requirement(requirement_type='range', expected_value=LLMRange(comparisons=[LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=0, unit='N/A'), LLMNumericalComparison(operator=<LLMOperator.LESS_THAN_OR_EQUAL_TO: '<='>, value=3, unit='N/A')])))])
2025-03-10 10:36:44 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='WHO performance status 0-3', criterion='WHO performance status', requirement=Requirement(requirement_type='range', expected_value=LLMRange(comparisons=[LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=0, unit='N/A'), LLMNumericalComparison(operator=<LLMOperator.LESS_THAN_OR_EQUAL_TO: '<='>, value=3, unit='N/A')])))]
2025-03-10 10:36:44 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='WHO performance status 0-3', criterion='WHO performance status', requirement=Requirement(requirement_type='range', expected_value=LLMRange(comparisons=[LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN_OR_EQUAL_TO: '>='>, value=0, unit='N/A'), LLMNumericalComparison(operator=<LLMOperator.LESS_THAN_OR_EQUAL_TO: '<='>, value=3, unit='N/A')])))]
2025-03-10 10:36:44 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:44 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:47 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:47 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='* Glomerular filtration rate > 50 mL/min', criterions=[SingleRequirementCriterion(exact_snippets='Glomerular filtration rate > 50 mL/min', criterion='glomerular filtration rate', requirement=Requirement(requirement_type='value', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=50, unit='mL/min')))]) logical_structure=LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Glomerular filtration rate > 50 mL/min', criterion='glomerular filtration rate', requirement=Requirement(requirement_type='value', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=50, unit='mL/min')))])
2025-03-10 10:36:47 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='Glomerular filtration rate > 50 mL/min', criterion='glomerular filtration rate', requirement=Requirement(requirement_type='value', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=50, unit='mL/min')))]
2025-03-10 10:36:47 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='Glomerular filtration rate > 50 mL/min', criterion='glomerular filtration rate', requirement=Requirement(requirement_type='value', expected_value=LLMNumericalComparison(operator=<LLMOperator.GREATER_THAN: '>'>, value=50, unit='mL/min')))]
2025-03-10 10:36:47 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:47 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:51 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:51 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='* Less than 50 mL/min eligible if due to obstructive neuropathy that can be relieved by stenting or nephrostomy', criterions=[SingleRequirementCriterion(exact_snippets='Less than 50 mL/min', criterion='renal function', requirement=Requirement(requirement_type='glomerular filtration rate', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=50, unit='mL/min'))), SingleRequirementCriterion(exact_snippets='obstructive neuropathy', criterion='obstructive neuropathy', requirement=Requirement(requirement_type='presence', expected_value=True)), SingleRequirementCriterion(exact_snippets='relieved by stenting or nephrostomy', criterion='obstructive neuropathy', requirement=Requirement(requirement_type='treatability', expected_value=['stenting', 'nephrostomy']))]) logical_structure=LLMLogicalConditional(condition=LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='Less than 50 mL/min', criterion='renal function', requirement=Requirement(requirement_type='glomerular filtration rate', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=50, unit='mL/min'))), SingleRequirementCriterion(exact_snippets='obstructive neuropathy', criterion='obstructive neuropathy', requirement=Requirement(requirement_type='presence', expected_value=True))]), then_criteria=SingleRequirementCriterion(exact_snippets='relieved by stenting or nephrostomy', criterion='obstructive neuropathy', requirement=Requirement(requirement_type='treatability', expected_value=['stenting', 'nephrostomy'])), else_criteria=None)
2025-03-10 10:36:51 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='Less than 50 mL/min', criterion='renal function', requirement=Requirement(requirement_type='glomerular filtration rate', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=50, unit='mL/min'))), SingleRequirementCriterion(exact_snippets='obstructive neuropathy', criterion='obstructive neuropathy', requirement=Requirement(requirement_type='presence', expected_value=True)), SingleRequirementCriterion(exact_snippets='relieved by stenting or nephrostomy', criterion='obstructive neuropathy', requirement=Requirement(requirement_type='treatability', expected_value=['stenting', 'nephrostomy']))]
2025-03-10 10:36:51 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='Less than 50 mL/min', criterion='renal function', requirement=Requirement(requirement_type='glomerular filtration rate', expected_value=LLMNumericalComparison(operator=<LLMOperator.LESS_THAN: '<'>, value=50, unit='mL/min'))), SingleRequirementCriterion(exact_snippets='obstructive neuropathy', criterion='obstructive neuropathy', requirement=Requirement(requirement_type='presence', expected_value=True)), SingleRequirementCriterion(exact_snippets='relieved by stenting or nephrostomy', criterion='obstructive neuropathy', requirement=Requirement(requirement_type='treatability', expected_value=['stenting', 'nephrostomy']))]
2025-03-10 10:36:51 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:51 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:52 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:52 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='* No comorbid condition that would prevent treatment', criterions=[SingleRequirementCriterion(exact_snippets='No comorbid condition that would prevent treatment', criterion='comorbid condition', requirement=Requirement(requirement_type='presence', expected_value=False))]) logical_structure=LLMLogicalNot(not_criteria=SingleRequirementCriterion(exact_snippets='No comorbid condition that would prevent treatment', criterion='comorbid condition', requirement=Requirement(requirement_type='presence', expected_value=True)))
2025-03-10 10:36:52 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='No comorbid condition that would prevent treatment', criterion='comorbid condition', requirement=Requirement(requirement_type='presence', expected_value=False))]
2025-03-10 10:36:52 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='No comorbid condition that would prevent treatment', criterion='comorbid condition', requirement=Requirement(requirement_type='presence', expected_value=True))]
2025-03-10 10:36:52 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:52 - src.services.logical_structurizer - ERROR - Missing criteria in logical structure: True
2025-03-10 10:36:52 - src.services.logical_structurizer - ERROR - Validation failed for miscellaneous line: line='* No comorbid condition that would prevent treatment' criterions=[LLMMultiRequirementCriterion(exact_snippets='No comorbid condition that would prevent treatment', criterion='comorbid condition', requirements=[Requirement(requirement_type='presence', expected_value=False)])]
2025-03-10 10:36:52 - src.services.logical_structurizer - ERROR - Validation error: Missing criteria in logical structure: True
2025-03-10 10:36:55 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:55 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='* Fertile patients must use effective contraception', criterions=[SingleRequirementCriterion(exact_snippets='Fertile patients', criterion='fertility', requirement=Requirement(requirement_type='status', expected_value='fertile')), SingleRequirementCriterion(exact_snippets='must use effective contraception', criterion='contraception use', requirement=Requirement(requirement_type='necessity', expected_value=True))]) logical_structure=LLMLogicalConditional(condition=SingleRequirementCriterion(exact_snippets='Fertile patients', criterion='fertility', requirement=Requirement(requirement_type='status', expected_value='fertile')), then_criteria=SingleRequirementCriterion(exact_snippets='must use effective contraception', criterion='contraception use', requirement=Requirement(requirement_type='necessity', expected_value=True)), else_criteria=None)
2025-03-10 10:36:55 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='Fertile patients', criterion='fertility', requirement=Requirement(requirement_type='status', expected_value='fertile')), SingleRequirementCriterion(exact_snippets='must use effective contraception', criterion='contraception use', requirement=Requirement(requirement_type='necessity', expected_value=True))]
2025-03-10 10:36:55 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='Fertile patients', criterion='fertility', requirement=Requirement(requirement_type='status', expected_value='fertile')), SingleRequirementCriterion(exact_snippets='must use effective contraception', criterion='contraception use', requirement=Requirement(requirement_type='necessity', expected_value=True))]
2025-03-10 10:36:55 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:55 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:57 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:57 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='PRIOR CONCURRENT THERAPY:', criterions=[SingleRequirementCriterion(exact_snippets='PRIOR CONCURRENT THERAPY', criterion='prior concurrent therapy', requirement=Requirement(requirement_type='presence', expected_value=True))]) logical_structure=LLMLogicalAnd(and_criteria=[SingleRequirementCriterion(exact_snippets='PRIOR CONCURRENT THERAPY', criterion='prior concurrent therapy', requirement=Requirement(requirement_type='presence', expected_value=True))])
2025-03-10 10:36:57 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='PRIOR CONCURRENT THERAPY', criterion='prior concurrent therapy', requirement=Requirement(requirement_type='presence', expected_value=True))]
2025-03-10 10:36:57 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='PRIOR CONCURRENT THERAPY', criterion='prior concurrent therapy', requirement=Requirement(requirement_type='presence', expected_value=True))]
2025-03-10 10:36:57 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:57 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:36:59 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:36:59 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='* No prior chemotherapy except low-dose chemotherapy to stabilize disease before study therapy', criterions=[SingleRequirementCriterion(exact_snippets='No prior chemotherapy', criterion='prior chemotherapy', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='except low-dose chemotherapy to stabilize disease before study therapy', criterion='low-dose chemotherapy', requirement=Requirement(requirement_type='purpose', expected_value='stabilize disease before study therapy'))]) logical_structure=LLMLogicalConditional(condition=SingleRequirementCriterion(exact_snippets='No prior chemotherapy', criterion='prior chemotherapy', requirement=Requirement(requirement_type='presence', expected_value=False)), then_criteria=None, else_criteria=SingleRequirementCriterion(exact_snippets='except low-dose chemotherapy to stabilize disease before study therapy', criterion='low-dose chemotherapy', requirement=Requirement(requirement_type='purpose', expected_value='stabilize disease before study therapy')))
2025-03-10 10:36:59 - src.services.logical_structurizer - INFO - Identified criteria: [SingleRequirementCriterion(exact_snippets='No prior chemotherapy', criterion='prior chemotherapy', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='except low-dose chemotherapy to stabilize disease before study therapy', criterion='low-dose chemotherapy', requirement=Requirement(requirement_type='purpose', expected_value='stabilize disease before study therapy'))]
2025-03-10 10:36:59 - src.services.logical_structurizer - INFO - Logical criteria: [SingleRequirementCriterion(exact_snippets='No prior chemotherapy', criterion='prior chemotherapy', requirement=Requirement(requirement_type='presence', expected_value=False)), SingleRequirementCriterion(exact_snippets='except low-dose chemotherapy to stabilize disease before study therapy', criterion='low-dose chemotherapy', requirement=Requirement(requirement_type='purpose', expected_value='stabilize disease before study therapy'))]
2025-03-10 10:36:59 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:36:59 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:37:00 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:37:00 - src.services.logical_structurizer - INFO - Verifying criteria presence for line: identified_line=IdentifiedUnrolledLine(line='PATIENT CHARACTERISTICS:', criterions=[]) logical_structure=LLMLogicalAnd(and_criteria=[])
2025-03-10 10:37:00 - src.services.logical_structurizer - INFO - Identified criteria: []
2025-03-10 10:37:00 - src.services.logical_structurizer - INFO - Logical criteria: []
2025-03-10 10:37:00 - src.services.logical_structurizer - INFO - Checking for missing criteria...
2025-03-10 10:37:00 - src.services.logical_structurizer - INFO - All criteria present in logical structure.
2025-03-10 10:37:00 - src.services.logical_structurizer - INFO - Completed logical structurizing for trial NCT ID: NCT00301782
2025-03-10 10:37:01 - src.repositories.trial_repository - INFO - Model saved successfully at C:\Users\wasab\Documents\code\python\Clinical-Trial-Prompts\output\allTrials\logical\NCT00301782_logical.json
2025-03-10 10:37:01 - src.services.trial_manager - INFO - Trial processing complete for NCT ID: NCT00301782
2025-03-10 10:37:01 - __main__ - INFO - Successfully processed trial NCT00301782
2025-03-10 10:37:01 - src.utils.helpers - INFO - Sending GET request to URL: https://clinicaltrials.gov/api/v2/studies?query.cond=cancer&query.term=cancer&query.titles=Cancer&fields=NCTId&pageSize=1&pageToken=NF0g5JSB
2025-03-10 10:37:01 - src.utils.helpers - INFO - Request successful.
2025-03-10 10:37:11 - __main__ - INFO - Processing trial 3: NCT ID NCT06095882
2025-03-10 10:37:11 - src.services.trial_manager - INFO - Starting processing for trial NCT ID: NCT06095882
2025-03-10 10:37:11 - src.services.trial_manager - INFO - Fetching trial data for NCT ID: NCT06095882
2025-03-10 10:37:11 - src.utils.helpers - INFO - Sending GET request to URL: https://clinicaltrials.gov/api/v2/studies/NCT06095882?fields=NCTId,OfficialTitle,EligibilityModule
2025-03-10 10:37:11 - src.utils.helpers - INFO - Request successful.
2025-03-10 10:37:11 - src.services.trial_manager - INFO - Successfully retrieved trial data.
2025-03-10 10:37:11 - src.services.identifier - INFO - Starting identification of criteria for trial NCT ID: NCT06095882
2025-03-10 10:37:44 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:37:44 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:37:46 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:37:46 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:37:47 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:37:47 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:37:49 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:37:49 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:38:01 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:38:01 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:38:03 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:38:03 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:38:06 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:38:06 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:38:08 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:38:08 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:38:10 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:38:10 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:38:12 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:38:12 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:38:18 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:38:18 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:38:19 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:38:19 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:38:23 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-10 10:38:23 - src.services.identifier - INFO - Verifying criteria snippets.
2025-03-10 10:38:23 - src.services.identifier - INFO - Successfully identified criteria for trial NCT ID: NCT06095882
2025-03-10 10:38:23 - src.repositories.trial_repository - INFO - Model saved successfully at C:\Users\wasab\Documents\code\python\Clinical-Trial-Prompts\output\allTrials\identified\NCT06095882_identified.json
2025-03-10 10:38:23 - src.services.logical_structurizer - INFO - Starting logical structurizing for trial NCT ID: NCT06095882
